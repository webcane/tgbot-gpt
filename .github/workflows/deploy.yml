name: Deploy to EC2
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  # Allows manually triggering the workflow from GitHub Actions UI
  workflow_dispatch:
env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
  PROJECT: ${{ github.event.repository.name }}
jobs:
  deploy:
    runs-on: ubuntu-22.04
    environment: aws
    env:
      JAVA_VERSION: '21'
    permissions:
      id-token: write # This is absolutely necessary for OIDC!
      contents: read  # Access to check out code and install dependencies
    steps:
      - name: Configure AWS credentials (using OIDC)
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-region: ${{ env.AWS_REGION }}
          # Optionally: you can specify role-duration-seconds, role-session-name, etc.
          # Optional, for better logging in CloudTrail
          role-session-name: GitHubActionsSession

      - name: Get EC2 Instance ID
        id: get_ec2_instance
        run: |
          INSTANCE_ID=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=${{ env.PROJECT }}-ec2" --query "Reservations[*].Instances[*].InstanceId" --output text)
          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV

      - name: Deploy Application to EC2
        run: |
          aws ssm send-command \
              --instance-ids ${{ env.INSTANCE_ID }} \
              --document-name "AWS-RunShellScript" \
              --comment "Deploy ${{ env.PROJECT }}" \
              --parameters commands=["cd /home/ubuntu/${{ env.PROJECT }}", "./deploy.sh"] \
              --cloud-watch-output-config "CloudWatchLogGroupName=/aws/ssm/${{ env.PROJECT }}-deploy-logs,CloudWatchOutputEnabled=true" \
              --region "${{ env.AWS_REGION }}"
